doctype html
html
  head
    // meta informations
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    meta(http-equiv='X-UA-Compatible' content='ie=edge')

    // title of the webpage
    title New Achievement &mdash; #{AOPSInfo.name} #{AOPSInfo.type}

    // favicon
    link(rel='icon' href='https://dummyimage.com/70x70/fff/000333&text=ACS')

    // stylesheets
    link(href='https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800&display=swap' rel='stylesheet')
    link(rel='stylesheet' href='/css/all.min.css')
    link(rel='stylesheet' href='/css/bootstrap.css')
    link(rel='stylesheet' href='/css/style.css')
    link(href='/css/quill.snow.css' rel='stylesheet')
    
    style. 
      
    




  body
    .dashboard
      include ../partials/header
      .container-fluid.mx-0
        .row
          include ../partials/sidebar
          .col-md-9.dashboard-content
            .dashboard-flash-messages

              - if (validationErrors) {
                .alert.alert-danger
                  button.close(type='button' data-dismiss='alert' aria-label='Close')
                    span(aria-hidden='true') &times;
                  p Please fix the following erorrs
                  -for (let i = 0; i < validationErrors.length; ++i) {
                    li #{validationErrors[i]}
                  -}
              -}


            .dashboard-notice__container.mx-auto
              #toolbar
                span.ql-formats
                  select.ql-header
                    option(value='1') Heading
                    option(value='2') Subheading
                    option(selected='') Normal
                  select.ql-font
                    option(selected='') Sans Serif
                    option(value='serif') Serif
                    option(value='monospace') Monospace
                span.ql-formats
                  button.ql-bold
                  button.ql-italic
                  button.ql-underline
                  button.ql-strike
                span.ql-formats
                  select.ql-color
                  select.ql-background
                span.ql-formats
                  button.ql-list(value='ordered')
                  button.ql-list(value='bullet')
                  select.ql-align
                    option(selected='')
                    option(value='center')
                    option(value='right')
                    option(value='justify')
                span.ql-formats
                  button.ql-blockquote
                  button.ql-link
                  button.ql-image
                  button.ql-code-block
                  button.ql-video
                span.ql-formats
                  button.ql-clean
                

             
              .title-input
                span Album Name
                input.title(type="text" placeholder="Enter Album Name" style="margin-left:14rem;")
                a.save(href="/" style="transform: translateY(-3px);") Create

              form#achievementForm.new-notice.p-4(action=`/gallery` method="POST" enctype="multipart/form-data")
                input.d-none(type="text" name="name")
                textarea.d-none(name="shortDesc", cols="30", rows="10")
                .container-fluid
                  .row
                    .preview

                label(for='file') 
                span.font-weight-bold Album photos
                input#file.form-control-file(type='file' name="album" multiple)

              #editor

          
                

            
    include ../partials/footer
    script(src='/js/image-resize.min.js')
    script(src='/js/jquery.min.js')
    script(src='/js/popper.min.js')
    script(src='/js/bootstrap.min.js')

    script.
      var editor = new Quill('#editor', {
        modules: { 
          toolbar: '#toolbar', 
          imageResize: {} 
        },
        theme: 'snow',
      });

      var saveBtn = document.querySelector('a.save');
      var form = document.querySelector('form.new-notice');
      var titleInput = document.querySelector('input.title');
      var editorContents = document.querySelector('.ql-editor');

      document.querySelector('#file').onchange = function() {
        // remove all the existing images
        var node = document.querySelector('.preview');
        while(node.firstChild) node.removeChild(node.firstChild);

        // create image elements
        for (let i = 0; i < this.files.length; ++i)
          document.querySelector('.preview').appendChild( document.createElement('img') ); 


        // set the image[src] 
        let images = document.querySelectorAll('.preview img');
        for (let i = 0; i < this.files.length; ++i)
          images[i].src = window.URL.createObjectURL(this.files[i]);
      }

      saveBtn.addEventListener('click', (e) => {
        e.preventDefault();
        form.elements.name.value = titleInput.value;
        form.elements.shortDesc.value = editorContents.innerHTML;
        form.submit();
      });



                  
      

